---
title: "INTRODUCTION TO SPATILA STATISTICS IN R"
format: html
editor: visual
code-overflow: wrap
df-print: kable
execute: 
  echo: true
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(broom)
library(janitor)
library(gt)
library(gtsummary)
theme_set(theme_bw())
```

```{r}
library(sf)
library(terra)
library(spdep)
library(rgeoda)
library(tmap)
library(leaflet)
library(gstat)
library(sp)
library(stars)
```

```{r}
# set range parameter
range = 2

## make a plot of the exponential correlation
tt = seq(0,10,length.out = 300)

cov_fun = exp(-tt/range)

ggplot()+
  geom_line(aes(x = tt,y = cov_fun),linewidth = 1)+
  labs(x = "distance", y= "correlation")
```

```{r}
## same plot, but as a variogram
nugget <- 0.2

ggplot()+
geom_line(aes(x = tt,y = (1-cov_fun + nugget)),linewidth = 1)+
  labs(x = "distance", y= "semivariance")+
  ylim(c(0,1.2))
```

```{r}
## simulate six realizations with an exponential model

# define covariance model
grid = expand.grid(
  x = seq(0,10,length.out = 100),
  y = seq(0,10,length.out = 100)
)

coordinates(grid) <- ~ x+ y

## def exponential variogram model
vmod <- vgm(psill = 1, model = "Exp", range = 1, nugget = 0)

## simulate 4 realizations
sim <- gstat(formula = z ~ 1, locations = ~x+ y,dummy = TRUE,beta = 0,model = vmod, nmax = 20)

set.seed(123)
z <- predict(sim,newdata = grid, nsim =4)

## plot one realization
# Plot one realization
sp::spplot(z["sim1"], main = "Simulated Field (sim1)")
```

```{r}
# Convert to data frame
df_sim <- as.data.frame(z)

# Check column names
head(df_sim)
```

```{r}
ggplot(df_sim, aes(x = x, y = y, fill = sim1)) +
  geom_raster() +
  scale_fill_viridis_c(option = "magma") +  # or "plasma", "viridis", etc.
  coord_equal() +
  labs(title = "Simulated Spatial Field (sim1)",
       fill = "Value") +
  theme_minimal()

```

```{r}
library(tidyr)
df_long <- pivot_longer(df_sim, cols = starts_with("sim"),
                        names_to = "realization", values_to = "value")

ggplot(df_long, aes(x = x, y = y, fill = value)) +
  geom_raster() +
  facet_wrap(~realization) +
  scale_fill_viridis_c() +
  coord_equal() +
  theme_minimal()

```

```{r}
library(ggplot2)
library(gstat)
library(sp)

# Convert df_sim to SpatialPointsDataFrame
#coordinates(df_sim) <- ~x + y

# Compute empirical variogram
variogram_result <- variogram(sim1 ~ 1, data = df_sim)

# Plot using ggplot2
ggplot(variogram_result, aes(x = dist, y = gamma)) +
  geom_point() +
  geom_line() +
  labs(x = "Distance", y = "Semivariance Î³(h)",
       title = "Empirical Variogram (sim1)") +
  theme_minimal()


```

### Geostatistics

```{r}

```
